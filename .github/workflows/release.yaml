name: "Release"

on:
  release:
    types:
      - created

env:
  IMAGE_BASENAME: "ghcr.io/kreemer/sandbox"

jobs:
  build:
    name: "Release docker image"

    runs-on: ubuntu-latest

    steps:
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ${{ env.IMAGE_BASENAME }}
          tag-semver: |
            {{version}}
            {{major}}.{{minor}}

      - name: Gather informations
        shell: bash
        id: info
        run: |
          echo "::set-output name=commit::${GITHUB_SHA}"

      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build.yaml
          commit: ${{ steps.info.outputs.commit }}
          name: docker_digest

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: kreemer
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Release docker image
        shell: bash
        run: |
          ls -lA
          if [[ ! -f "docker_digest" ]]; then
            echo "::error file=docker_digest::docker_digest does not exists."
            exit 1
          fi
          DIGEST=$(cat docker_digest)
          echo "Getting image ${IMAGE_BASENAME}@${DIGEST}"
          docker pull ${IMAGE_BASENAME}@${DIGEST}
          while IFS= read -r tag; do
            echo "Tagging ${{ steps.info.outputs.image }} as ${IMAGE_BASENAME}${tag}"
            docker tag ${{ steps.info.outputs.image }} ${IMAGE_BASENAME}${tag}
          done <<< "${{ steps.docker_meta.outputs.tags }}"
          echo "Pushing image ${IMAGE_BASENAME} to registry"
          docker image push --all-tags ${IMAGE_BASENAME}
